# on:
#   push:
#     branches:
#       - staging

# name: ðŸš€ Deploy website on push

# jobs:
#   web-deploy:
#     name: ðŸŽ‰ Deploy website
#     runs-on: ubuntu-latest
#     steps:
#       # Checkout the repository
#       - name: ðŸšš Get latest code
#         uses: actions/checkout@v4

#       - name: Setup Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: '21'

#       - name: Install packages
#         run: npm install --legacy-peer-deps

#       - name: Set environment
#         run: |
#           echo "NODE_ENV=${{ secrets.NODE_ENV_STAGING }}" >> .env.staging
#           echo "VITE_NODE_ENV=${{ secrets.VITE_NODE_ENV_STAGING }}" >> .env.staging
#           echo "VITE_SALT_KEY=${{ secrets.VITE_SALT_KEY }}" >> .env.staging
#           echo "VITE_PUSHER_KEY=${{ secrets.VITE_PUSHER_KEY }}" >> .env.staging
#           echo "VITE_PUSHER_SECRET=${{ secrets.VITE_PUSHER_SECRET }}" >> .env.staging
#           echo "VITE_PUSHER_APP_ID=${{ secrets.VITE_PUSHER_APP_ID }}" >> .env.staging
#           echo "VITE_PUSHER_PORT=${{ secrets.VITE_PUSHER_PORT }}" >> .env.staging
#           echo "VITE_PUSHER_SCHEME=${{ secrets.VITE_PUSHER_SCHEME }}" >> .env.staging
#           echo "VITE_PUSHER_APP_CLUSTER=${{ secrets.VITE_PUSHER_APP_CLUSTER }}" >> .env.staging
#           echo "VITE_API_URL=${{ secrets.VITE_API_URL_STAGING }}" >> .env.staging
#           echo "VITE_OFFICE_URL=${{ secrets.VITE_OFFICE_URL_STAGING }}" >> .env.staging
#           echo "VITE_BACKEND=${{ secrets.VITE_BACKEND_STAGING }}" >> .env.staging
#           echo "VITE_REPORTING_URL=${{ secrets.VITE_REPORTING_URL_STAGING }}" >> .env.staging

#       - name: Build for staging
#         run: npm run build-staging

#       # sync files via FTP
#       - name: ðŸ“‚ Sync files via FTP
#         uses: SamKirkland/FTP-Deploy-Action@v4.3.4
#         with:
#           server: ${{ secrets.FTP_HOST }}
#           username: ${{ secrets.FTP_USERNAME }}
#           password: ${{ secrets.FTP_PASSWORD }}
#           local-dir: ./dist/
#           server-dir: /

name: Deploy Frontend to VPS

on:
  push:
    branches:
      - staging  # or main, or production

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 21

      - name: Install dependencies and build
        run: |
          npm install --legacy-peer-deps

      - name: Set environment
        run: |
          echo "NODE_ENV=${{ secrets.NODE_ENV_STAGING }}" >> .env.staging
          echo "VITE_NODE_ENV=${{ secrets.VITE_NODE_ENV_STAGING }}" >> .env.staging
          echo "VITE_SALT_KEY=${{ secrets.VITE_SALT_KEY }}" >> .env.staging
          echo "VITE_PUSHER_KEY=${{ secrets.VITE_PUSHER_KEY }}" >> .env.staging
          echo "VITE_PUSHER_SECRET=${{ secrets.VITE_PUSHER_SECRET }}" >> .env.staging
          echo "VITE_PUSHER_APP_ID=${{ secrets.VITE_PUSHER_APP_ID }}" >> .env.staging
          echo "VITE_PUSHER_PORT=${{ secrets.VITE_PUSHER_PORT }}" >> .env.staging
          echo "VITE_PUSHER_SCHEME=${{ secrets.VITE_PUSHER_SCHEME }}" >> .env.staging
          echo "VITE_PUSHER_APP_CLUSTER=${{ secrets.VITE_PUSHER_APP_CLUSTER }}" >> .env.staging
          echo "VITE_API_URL=${{ secrets.VITE_API_URL_STAGING }}" >> .env.staging
          echo "VITE_OFFICE_URL=${{ secrets.VITE_OFFICE_URL_STAGING }}" >> .env.staging
          echo "VITE_BACKEND=${{ secrets.VITE_BACKEND_STAGING }}" >> .env.staging
          echo "VITE_REPORTING_URL=${{ secrets.VITE_REPORTING_URL_STAGING }}" >> .env.staging

      - name: Build asset
        run: npm run build-staging

      - name: Setup SSH Agent
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PASSWORD }}

      - name: Deploy dist/ to VPS
        run: |
          rsync -avz --delete \
            -e "ssh -o StrictHostKeyChecking=no" \
            ./dist/ ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:/var/www/apps/staging.dfactory.pro
